services:
  # Main bot service
  - type: web
    name: goten-bot
    env: node
    buildCommand: npm install
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: SESSION_ID
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: OWNER_NUMBER
        sync: false
      - key: ENABLE_AI
        value: "yes"
      - key: SHENG_MODE
        value: "yes"
      - key: PREFIX
        value: "."
      - key: BOT_NAME
        value: "GOTEN"
    scaling:
      minInstances: 1
      maxInstances: 1
      targetMemoryPercent: 80
    autoDeploy: true
    disk:
      name: goten-data
      mountPath: /opt/render/project/src/sessions
      sizeGB: 1
    healthCheckPath: /health
    
  # Pairing service (optional, can be deployed separately or disabled)
  - type: web
    name: goten-pairing
    env: node
    buildCommand: npm install
    startCommand: node pair.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
    scaling:
      minInstances: 1
      maxInstances: 1
    autoDeploy: false  # Set to true if you want this to auto-deploy
    healthCheckPath: /health 

  # Static site for assets and landing page
  - type: static_site
    name: goten-static
    buildCommand: ""  # No build command needed for static files
    publishDirectory: "public"
    pullRequestPreviewsEnabled: false
    headers:
      - path: "/*"
        name: "Cache-Control"
        value: "public, max-age=86400"  # Cache for 1 day
      - path: "/assets/*"
        name: "Cache-Control"
        value: "public, max-age=2592000"  # Cache assets for 30 days
    routes:
      - type: redirect
        source: /health
        destination: /
      - type: rewrite
        source: /*
        destination: /index.html 